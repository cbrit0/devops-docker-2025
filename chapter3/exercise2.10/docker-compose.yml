services:
  backend:
    build:
      context: ./example-backend
    container_name: backend
    environment:
      - PORT=8080
      - REQUEST_ORIGIN=http://localhost
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DATABASE=postgres
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./example-frontend
    container_name: frontend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost/api
    depends_on:
      - backend
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_PASSWORD: password
    restart: unless-stopped
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
    - backend
    - frontend
    networks:
      - app-network

networks:
  app-network:
